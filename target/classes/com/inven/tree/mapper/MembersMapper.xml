<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inven.tree.mapper.MembersMapper">

	<!-- 로그인 메소드 -->
	<select id="login" parameterType="com.inven.tree.model.Members"
		resultType="int">
		SELECT COUNT(*)
		FROM members
		WHERE mb_id = #{mbId}
		AND mb_pw =
		#{mbPw}
		AND corp_idx = #{corpIdx}
	</select>

	<!-- 모든 멤버정보 가져오기 -->
	<select id="findAllMembers"
		resultType="com.inven.tree.model.Members">
		SELECT
		mb_id AS mbId,
		mb_pw AS mbPw,
		mb_name AS mbName,
		mb_phone AS mbPhone,
		mb_theme AS mbTheme,
		corp_idx AS corpIdx,
		joined_at
		AS joinedAt
		FROM members
		WHERE is_admin = 'N'
	</select>

	<!-- 멤버 정보 저장하기 -->
	<insert id="save" parameterType="com.inven.tree.model.Members">
		INSERT INTO members (mb_id,
		mb_pw, mb_name, mb_phone, corp_idx)
		VALUES (#{mbId}, #{mbPw},
		#{mbName}, #{mbPhone}, #{corpIdx})
	</insert>

	<!-- 멤버 정보 삭제 -->
	<delete id="delete" parameterType="com.inven.tree.model.Members">
		DELETE FROM members WHERE
		mb_id = #{mbId} AND corp_idx = #{corpIdx}
	</delete>

	<!-- 모든 권한정보 가져오기 -->
	<select id="findAllAuths"
		resultType="com.inven.tree.model.Auths">
		SELECT
		auth_idx AS authIdx,
		mb_id AS mbId,
		inventory_yn AS
		inventoryYn,
		ship_yn AS shipYn,
		chart_yn AS chartYn,
		set_yn AS setYn
		FROM
		auths
	</select>

	<!-- 사용자의 회사코드로 멤버정보 불러오기 -->
	<select id="findMembersByCorpIdx"
		resultType="com.inven.tree.model.Members">
		SELECT
		mb_id AS mbId,
		mb_pw AS mbPw,
		mb_name AS mbName,
		mb_phone AS mbPhone,
		mb_theme AS mbTheme,
		corp_idx AS corpIdx,
		joined_at
		AS joinedAt
		FROM members
		WHERE corp_idx = #{corpIdx}
		AND is_admin = 'N'
	</select>

	<!-- 로그인 계정 권한 조회 -->
	<select id="getPermissions" parameterType="String"
		resultMap="AuthsResultMap">
		SELECT inventory_yn, ship_yn, chart_yn, set_yn
		FROM auths
		WHERE mb_id = #{mbId}
	</select>

	<!-- 결과 매핑 -->
	<resultMap id="AuthsResultMap"
		type="com.inven.tree.model.Auths">
		<result property="inventoryYn" column="inventory_yn" />
		<result property="shipYn" column="ship_yn" />
		<result property="chartYn" column="chart_yn" />
		<result property="setYn" column="set_yn" />
	</resultMap>

	<!-- 특정 회원 정보 가져오기 -->
	<select id="findByIdAndCorpIdx" parameterType="map"
		resultType="com.inven.tree.model.Members">
		SELECT
		mb_id AS mbId,
		mb_pw AS mbPw,
		mb_name AS mbName,
		mb_phone AS mbPhone,
		corp_idx AS corpIdx,
		joined_at AS joinedAt,
		is_admin AS isAdmin
		FROM members
		WHERE mb_id = #{mbId} AND corp_idx =
		#{corpIdx}
	</select>

	<!-- 특정 회원의 권한 정보 가져오기 -->
	<select id="findAuthsByMbIdAndCorpIdx" parameterType="map"
		resultType="com.inven.tree.model.Auths">
		SELECT
		inventory_yn AS inventoryYn,
		ship_yn AS shipYn,
		chart_yn AS chartYn,
		set_yn AS setYn
		FROM auths
		WHERE mb_id = (SELECT
		mb_id FROM members WHERE mb_id = #{mbId} AND corp_idx
		= #{corpIdx})
	</select>
	<!-- 다크모드 관련 메소드 -->
	<!-- 테마 설정을 가져오는 메소드 -->
	<select id="getMbTheme" resultType="String">
		SELECT mb_theme
		FROM members
		WHERE mb_id = #{mbId}
	</select>

	<!-- 테마 설정을 업데이트하는 메소드 -->
	<update id="updateMbTheme">
		UPDATE members
		SET mb_theme = #{theme}
		WHERE mb_id =
		#{mbId}
	</update>

	<!-- 권한 정보 저장 -->
	<insert id="saveAuth" parameterType="com.inven.tree.model.Auths">
		INSERT INTO auths (mb_id,
		inventory_yn, ship_yn, chart_yn, set_yn)
		VALUES (#{mbId},
		#{inventoryYn}, #{shipYn}, #{chartYn}, #{setYn})
	</insert>

	<!-- 회원 정보를 업데이트하는 SQL 쿼리 -->
	<update id="updateMember"
		parameterType="com.inven.tree.model.Members">
		UPDATE members
		SET mb_pw = #{mbPw},
		mb_name = #{mbName},
		mb_phone = #{mbPhone},
		joined_at = #{joinedAt},
		is_admin = #{isAdmin}
		WHERE mb_id = #{mbId}
		AND corp_idx = #{corpIdx}
	</update>

	<!-- 권한 정보를 업데이트하는 SQL 쿼리 -->
	<update id="updateAuth"
		parameterType="com.inven.tree.model.Auths">
		UPDATE auths
		SET inventory_yn = #{inventoryYn},
		ship_yn = #{shipYn},
		chart_yn = #{chartYn},
		set_yn = #{setYn}
		WHERE mb_id = #{mbId}
	</update>

</mapper>
