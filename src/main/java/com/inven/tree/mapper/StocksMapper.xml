<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.inven.tree.mapper.StocksMapper">

	<!-- ResultMap 정의 -->
	<resultMap id="stocksResultMap"
		type="com.inven.tree.model.Stocks">
		<id property="stockIdx" column="stock_idx" />
		<result property="corpIdx" column="corp_idx" />
		<result property="prodIdx" column="prod_idx" />
		<result property="stockCnt" column="stock_cnt" />
		<result property="stockedAt" column="stocked_at" />
		<result property="subIdx" column="sub_idx" />
	</resultMap>

	<!-- 새로운 ResultMap 정의 (상세 정보 포함) -->
	<resultMap id="stocksDetailResultMap" type="map">
		<result property="stockIdx" column="stock_idx" />
		<result property="corpIdx" column="corp_idx" />
		<result property="company" column="sub_name" />
		<result property="productCode" column="prod_barcode" />
		<result property="productName" column="prod_name" />
		<result property="stockCnt" column="stock_cnt" />
		<result property="stockedAt" column="stocked_at" />
		<result property="isRelease" column="is_release" />
		<result property="subIdx" column="sub_idx" />
	</resultMap>


	<!-- 모든 Stocks를 가져오는 SQL -->
	<select id="selectAllStocks" resultMap="stocksResultMap">
		SELECT * FROM stocks
	</select>

	<!-- stocks 테이블에 데이터 삽입 SQL -->
	<insert id="insertStock">
		INSERT INTO stocks (corp_idx, prod_idx, stock_cnt, stocked_at)
		VALUES (#{corpIdx}, #{prodIdx}, #{stockCnt}, #{stockedAt})
	</insert>

	<!-- ID 목록에 해당하는 Stocks를 가져오는 SQL -->
	<select id="selectStocksByIds" parameterType="list"
		resultMap="stocksResultMap">
		SELECT * FROM stocks
		WHERE stock_idx IN
		<foreach item="item" index="index" collection="list" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</select>

	<!-- 필터링 및 페이징된 Stocks와 상세 정보를 가져오는 SQL -->
	<select id="selectStocksWithDetailsFiltered"
		resultMap="stocksDetailResultMap">
		SELECT
		s.stock_idx AS stockIdx,
		s.corp_idx AS corpIdx,
		sub.sub_name AS company,
		p.prod_barcode AS productCode,
		p.prod_name AS productName,
		s.stock_cnt AS stockCnt,
		DATE_FORMAT(s.stocked_at, '%Y-%m-%d %H:%i:%s') AS date,
		'N' AS isRelease,
		s.sub_idx AS subIdx
		FROM stocks s
		JOIN subsidiary sub ON s.sub_idx = sub.sub_idx
		JOIN products p ON s.prod_idx = p.prod_idx
		WHERE s.corp_idx = #{corpIdx}
		<if
			test="filterColumn != null and filterColumn != '' and filterValue != null and filterValue != ''">
			AND
			<choose>
				<when test="filterColumn == 'company'">
					sub.sub_name LIKE CONCAT('%', #{filterValue}, '%')
				</when>
				<when test="filterColumn == 'productCode'">
					p.prod_barcode LIKE CONCAT('%', #{filterValue}, '%')
				</when>
				<when test="filterColumn == 'productName'">
					p.prod_name LIKE CONCAT('%', #{filterValue}, '%')
				</when>
				<when test="filterColumn == 'quantity'">
					s.stock_cnt = #{filterValue}
				</when>
				<when test="filterColumn == 'date'">
					DATE(s.stocked_at) = DATE(#{filterValue})
				</when>
				<when test="filterColumn == 'type'">
					'입고' = #{filterValue}
				</when>
			</choose>
		</if>
		ORDER BY s.stocked_at DESC
	</select>

	<!-- 필터링된 항목의 총 개수를 세는 SQL -->
	<select id="countFilteredEntries" resultType="int">
		SELECT COUNT(*)
		FROM stocks s
		JOIN subsidiary sub ON s.sub_idx = sub.sub_idx
		JOIN products p ON s.prod_idx = p.prod_idx
		WHERE s.corp_idx = #{corpIdx}
		<if
			test="filterColumn != null and filterColumn != '' and filterValue != null and filterValue != ''">
			AND
			<choose>
				<when test="filterColumn == 'company'">
					sub.sub_name LIKE CONCAT('%', #{filterValue}, '%')
				</when>
				<when test="filterColumn == 'productCode'">
					p.prod_barcode LIKE CONCAT('%', #{filterValue}, '%')
				</when>
				<when test="filterColumn == 'productName'">
					p.prod_name LIKE CONCAT('%', #{filterValue}, '%')
				</when>
				<when test="filterColumn == 'quantity'">
					s.stock_cnt = #{filterValue}
				</when>
				<when test="filterColumn == 'date'">
					DATE(s.stocked_at) = DATE(#{filterValue})
				</when>
				<when test="filterColumn == 'type'">
					'입고' = #{filterValue}
				</when>
			</choose>
		</if>
	</select>

</mapper>
