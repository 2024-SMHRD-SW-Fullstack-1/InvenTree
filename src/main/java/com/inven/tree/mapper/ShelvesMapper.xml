<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inven.tree.mapper.ShelvesMapper">

	<!-- 모든 Shelves를 가져오는 SQL -->
	<select id="selectAllShelves" resultMap="shelves">
		SELECT shelf_idx,
		wh_idx, rack_id, shelf_id, shelf_status
		FROM shelves
	</select>
	<!-- 선반 식별자로 선반 데이터 삭제(shelfIdx) -->
	<delete id="deleteShelves" parameterType="list">
		DELETE FROM shelves WHERE shelf_idx IN
		<foreach item="shelfId" collection="list" open="("
			separator="," close=")">
			#{shelfId}
		</foreach>
	</delete>

	<!-- 선반 정보 업데이트 또는 추가 -->
	<insert id="updateOrInsertShelves" parameterType="Shelves">
		<!-- MySQL의 경우 ON DUPLICATE KEY UPDATE 구문을 사용할 수 있습니다. -->
		INSERT INTO shelves (wh_idx, rack_id, shelf_id, shelf_status)
		VALUES
		(#{whIdx}, #{rackId}, #{shelfId}, #{shelfStatus})
		ON DUPLICATE KEY
		UPDATE
		rack_id = VALUES(rack_id),
		shelf_id = VALUES(shelf_id),
		shelf_status = VALUES(shelf_status)
	</insert>
	<!--회사코드로 선반정보 추출(재고현황 선반 정보 불러오기 때문에 추가한 메소드 -->
	<select id="findByCorpIdx" resultMap="shelves">
		SELECT s.shelf_idx,
		s.wh_idx, s.rack_id, s.shelf_id, s.shelf_status
		FROM shelves s
		JOIN
		warehouses w ON s.wh_idx = w.wh_idx
		WHERE w.corp_idx = #{corpIdx}
	</select>

	<!-- ResultMap -->
	<resultMap type="com.inven.tree.model.Shelves" id="shelves">
		<id property="shelfIdx" column="shelf_idx" /> <!-- primary key -->
		<result property="whIdx" column="wh_idx" />
		<result property="rackId" column="rack_id" />
		<result property="shelfId" column="shelf_id" />
		<result property="shelfStatus" column="shelf_status" />
	</resultMap>
</mapper>